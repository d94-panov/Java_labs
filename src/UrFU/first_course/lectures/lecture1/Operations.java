package UrFU.first_course.lectures.lecture1;

public class Operations {
    public static void main(String[] args) {
        // унарный минус и унарный плюс:
        // унарный минус "-" меняет знак числа или выражения на противоположный;
        // унарый плюс "+" не выполняет никаких действий над числом или выражением;
        // побитовое дополнение "~" (только для целых чисел) инвертирует все ьиты поля числа (меняет 0 на 1 и 1 на 0);
        // инкремент "++" (только для целых чисел) увеличивает значение переменной на 1;
        // декремент "--" (только для целых чисел) уменьшает значение переменной на 1.
        int x = 7, y, z;
        System.out.println("x = " + x); // k = 7
        y = -x;
        System.out.println("y = " + y); // j = -7
        z = +x;
        System.out.println("z = " + z); // k = 7

        // побитовое дополнение
        int i = 15; // двоичное представление i
                    // i = 00000000 00000000 00000000 00001111
        int j;
        j = ~i; // двоичное представление j
                // j = 11111111 11111111 11111111 11110000
        System.out.println("z = " + j); // -16

        // операции инкремента и декремента
        int a1 = 1, a2 = 1, b, c;
        b = ++a1; // префиксный инкремент
        System.out.println("b = " + b); // 2
        System.out.println("a1 = " + a1); // 2
        c = a2++; // постфиксный инкремент
        System.out.println("c = " + c); // 1
        System.out.println("a2 = " + a2); // 2

        // Сложение
        int ys = 5, y1, y2, y3, y4, y5;
        y1 = y + 11;
        System.out.println("y2 = " + y1); // y1 = 16

        // Вычитаение
        y2 = y - 4;
        System.out.println("y2 = " + y2); // y2 = 1

        //Умножение
        y3 = y2 * y;
        System.out.println("y3 = " + y3); // y3 = 5

        // Деление (при делении целых чисел дробная часть отбрасывается)
        y4 = ys/3;
        System.out.println("y4 = " + y4); // y4 = 1

        // Деление с остатком
        y5 = ys%3;
        System.out.println("y5 = " + y5); // y5 = 2

        // Побитовое И
        int xp = 112; // xp: 00000000 00000000 00000000 01110000
        int yp = 94; //  yp: 00000000 00000000 00000000 01011110
        int zp = xp & y; // zp = 80: 00000000 00000000 00000000 01010000
        System.out.println("zp = " + z);

        // Побитовое ИЛИ
        int ap = 112; // ap: 00000000 00000000 00000000 01110000
        int bp = 94; // bp: 00000000 00000000 00000000 01011110
        int cp = ap | bp; // cp = 126: 00000000 00000000 00000000 0111000
        System.out.println("cp = " + cp);

        // Побитовое исключение ИЛИ
        int ip = 112; // ip: 00000000 00000000 00000000 01110000
        int jp = 94; // jp: 00000000 00000000 00000000 01011110
        int kp = ip ^ jp; // jp = 46: 00000000 00000000 00000000 00101110
        System.out.println("kp = " + kp);

        // Сдвиг влево с учетом знака
        int xs = 31, zs; // xs: 00000000 00000000 00000000 00011111
        zs = xs << 2; // zs = 124: 00000000 00000000 00000000 01111100
        System.out.println("z = " + z);

        // Сдвиг вправо с учетом знака
        int as = -17, bs; // as: 11111111 11111111 11111111 11101111
        bs = as >> 2;
        System.out.println("bs = " + bs);

        // Сдвиг вправо без учета знака
        int is = -17, ks;
        ks = is >>> 2;
        System.out.println("ks = " + ks);
    }
}
